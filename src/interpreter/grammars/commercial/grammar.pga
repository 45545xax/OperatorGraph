axiom Box W;

terminal AirConditionerSide (1, 0);
terminal AirConditionerTop (1, 1);
terminal ColumnWall (1, 2);
terminal Door (1, 3);
terminal Roof (1, 4);
terminal Top (1, 5);
terminal Wall (1, 6);
terminal Window (1, 7);

W = SubDiv (Y) { 15 : Base | -0.6: MidFloors | -0.4: UpFloors };

// duplicate main body of building to save on wall geometry
Base = SubDiv (Y) { -0.5: Translate(0, Exp(ShapeSize(Y) /  2), 0) Scale(-1, -2, -1) Base1 | 
                    -0.5: Translate(0, Exp(ShapeSize(Y) / -2), 0) Scale(-1, -2, -1) WallDummy };

Base1 = SubDiv (Y) { 5: GroundFloor | -1: CompSplit() { Discard() | Discard() | Facade1 } };

GroundFloor = CompSplit () { Discard() | Discard() | GroundFacade  };
GroundFacade = SubDiv(X) { 1: Column | -1: Facade| 5 :  DoorSection | -1: Facade | 1: Column };

DoorSection = Extrude(1) CompSplit() { SubDiv(X) { -1 : Wall | 4 : DoorFrame | -1: Wall } | Discard()| Wall };
DoorFrame = SubDiv (X) { -0.2 : Wall | -0.6 : DoorTile | -0.2 : Wall };
DoorTile = SubDiv (Y) { -0.02: Wall | -0.78 : Door | -0.2 : Wall };

// duplicate main body of building to save on wall geometry
MidFloors = SubDiv (Y) { -0.5: Translate(0, Exp(ShapeSize(Y) /  2), 0) Scale(-1, -2, -1) CompSplit() { Discard() | Discard() | Facade1 } | 
                         -0.5: Translate(0, Exp(ShapeSize(Y) / -2), 0) Scale(-1, -2, -1) WallDummy };

Facade1 = RandomRule(ShapeCustomAttribute()) { 
            0.333: SubDiv(X) { 1: Column | -1: Facade | 1: Column } |
            0.333: Facade2  |
            0.334: SubDiv(X) { 1: Column | -1: Facade | 1: Column | -1: Facade | 1: Column } 
};

Facade2 = IfSizeLess(X, 12) { 
    SubDiv(X) { 1: Column | -1: Facade | 1: Column } |
    SubDiv(X) { 1: Column | -1: Facade | 1: Column | 3: Facade | 1: Column | -1: Facade | 1: Column } 
};

Column = Extrude(0.4) CompSplit() { ColumnWall | ColumnWall | ColumnWall };

Facade = IfSizeLess(Y, 4) { 
    Discard() | 
    Repeat(Y, 4, ADJUST_TO_FILL) IfSizeLess(X, 4) { 
        Discard() | 
        Repeat(X, 4, ADJUST_TO_FILL) FacadeTile1 
    } 
};

FacadeTile1 = SubDiv (X) { -1: Discard() | 2.8: FacadeTile2 | -1: Discard() } ;
FacadeTile2 = SubDiv (Y) { -1: Discard() | 3: WindowTile | -1: Discard() };

WindowTile = Scale(-0.9,-0.9,-1) Window;

// duplicate main body of building to save on wall geometry
UpFloors = SubDiv(Y) { -1: TopFloorsDup | 0.4: RoofDeco };
TopFloorsDup = SubDiv (Y) { -0.5: Translate(0, Exp(ShapeSize(Y) /  2), 0) Scale(-1, -2, -1) CompSplit() { Discard() | Discard() | Facade1 } | 
                              -0.5: Translate(0, Exp(ShapeSize(Y) / -2), 0) Scale(-1, -2, -1) WallDummy };

RoofDeco = SubDiv (Y) { -0.5: Translate(0, Exp(ShapeSize(Y) /  2), 0) Scale(-1, -2, -1) RoofFacade  | 
                        -0.5: Translate(0, Exp(ShapeSize(Y) / -2), 0) Scale(-1, -2, -1) 
                        RandomRule(ShapeSeed()) {
                            0.333: RoofTowers |
                            0.333: AirConditioner |
                            0.334: Translate(0, ShapeSize(Y), 0) PitchedRoof 
                        } 
};

RoofFacade = CompSplit() { Discard() | Discard() | Extrude(0.3) Translate(0,Exp(ShapeSize(Y) / -2),0) RoofFacade1 };
RoofFacade1 = CompSplit() { Wall | Wall | Wall };

AirConditioner = SubDiv(X) { -1: AirConditioner2 | -1: AirConditioner3 };
AirConditioner2 = SubDiv(Z) { -1: AirConditioner4 | -1: Discard() };
AirConditioner3 = SubDiv(Z) { -1: Discard() | -1: AirConditioner4 };
AirConditioner4 =  Scale(3.5,1.5,2.5) Translate(0, Exp(ShapeSize(Y) / 2), 0) CompSplit() { AirConditionerTop | Discard() | AirConditionerSide };

PitchedRoof = Translate(0, Exp(ShapeSize(Y) * -0.5), 0) 
              Rotate(0, 0, 90)
              Scale(Rand(1, 3), ShapeSize(X), -1) 
              Translate(Exp(ShapeSize(X) * 0.5), 0, 0) 
              Roof;

RoofTowers = SubDiv(X) { 1: RoofTowers1 | -1: Discard() | 1: RoofTowers2 | -1: Discard() | 1: RoofTowers1 };
RoofTowers1 = SubDiv(Z) { 1: RoofTowers3 | -1: Discard() | 1: RoofTowers3 | -1: Discard() | 1: RoofTowers3 };
RoofTowers2 = SubDiv(Z) { 1: RoofTowers3 | -1: Discard() | 1: Discard() | -1: Discard() | 1: RoofTowers3 };
RoofTowers3 = Scale(-1, -2, -1) Translate(0, Exp(ShapeSize(Y) * 0.75), 0) CompSplit() { Wall | Discard() | Wall };

WallDummy = Scale(-0.999, -1, -0.999) CompSplit() { Top | Discard() | Wall };
